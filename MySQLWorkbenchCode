-- Create a table to store user information
CREATE TABLE IF NOT EXISTS Users (
    user_id INT AUTO_INCREMENT PRIMARY KEY,
    username VARCHAR(255) NOT NULL,
    email VARCHAR(255) NOT NULL UNIQUE
    -- Add other user-related fields as needed
);

-- Create a table to store icebreaker/quick game scores
CREATE TABLE IF NOT EXISTS GameScores (
    score_id INT AUTO_INCREMENT PRIMARY KEY,
    user_id INT,
    score INT,
    game_type VARCHAR(50),
    timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES Users(user_id)
);

-- Create a table to store focus detection data
CREATE TABLE IF NOT EXISTS FocusDetection (
    focus_id INT AUTO_INCREMENT PRIMARY KEY,
    user_id INT,
    is_focused BOOLEAN,
    timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES Users(user_id)
);

-- Create a table to store user engagement analytics
CREATE TABLE IF NOT EXISTS UserEngagementAnalytics (
    analytics_id INT AUTO_INCREMENT PRIMARY KEY,
    user_id INT,
    total_sessions INT,
    focused_sessions INT,
    average_focus_percentage DECIMAL(5, 2),
    timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES Users(user_id)
);

-- Create a table to store chatbot feedback
CREATE TABLE IF NOT EXISTS ChatbotFeedback (
    feedback_id INT AUTO_INCREMENT PRIMARY KEY,
    user_id INT,
    feedback_text TEXT,
    timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES Users(user_id)
);

-- Create a table to store grades
CREATE TABLE IF NOT EXISTS Grades (
    grade_id INT AUTO_INCREMENT PRIMARY KEY,
    user_id INT,
    subject VARCHAR(255),
    score INT,
    timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES Users(user_id)
);

-- Create a table to store chat messages
CREATE TABLE IF NOT EXISTS ChatMessages (
    message_id INT AUTO_INCREMENT PRIMARY KEY,
    username VARCHAR(255),
    text TEXT,
    timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);
